---
title: "Iteration Report"
format: 
  html:
    embed-resources: true
params:
  experiment: null
  X1_levels: null
  model_specs: null
  optimization_specs: null
---

```{r setup, include=FALSE}
library(tidyverse)
library(ggrepel)
library(kableExtra)
library(zeallot)
library(here)
library(yaml)

# -------------------------------
# ✅ Load params from config
# -------------------------------
list2env(params, envir = environment())
app_name <- experiment$app_name
estimand <- experiment$estimand
exp_id <- experiment$id
sim_id <- experiment$sim_id
iter_id <- experiment$iter_id

# -------------------------------
# ✅ Define paths
# -------------------------------
project_root <- rprojroot::find_root(rprojroot::has_file("Makefile"))
exp_dir <- file.path(project_root, "experiments", exp_id)
true_params_dir <- file.path(exp_dir, "true_params")
iter_dir <- file.path(exp_dir, sim_id, iter_id)
data_dir <- file.path(iter_dir, "data")
results_dir <- file.path(iter_dir, "results")
estimand_helpers_dir <- file.path(project_root, "applications", app_name, estimand, "scripts", "helpers")
common_helpers_dir <- file.path(project_root, "common", "scripts", "helpers")

# -------------------------------
# ✅ Load helpers
# -------------------------------
miceadds::source.all(estimand_helpers_dir, print.source = FALSE)
miceadds::source.all(common_helpers_dir, print.source = FALSE)
```

```{r echo=FALSE, results="asis"}
header <- paste("###", "Experiment", exp_id, "— Simulation", sim_id, "— Iteration", iter_id)
cat(header)
```

---

```{r include=FALSE}
Y_probs <- readRDS(here(data_dir, "Y_probs.rds"))
model_df <- readRDS(here(data_dir, "model_df.rds"))
observed_plots <- get_observed_plots(X1_levels, Y_probs, model_df)
```

```{r include=FALSE}
J <- model_specs$J
entropy_range_specs <- model_specs$entropy_range_specs
entropy_ranges <- X1_levels |>
  names() |>
  get_entropy_ranges(J, entropy_range_specs)
X1_levels_temp <- X1_levels |>
  imap(\(level, h) {
    level$X2$entropy_range <- entropy_ranges[[h]]
    level$m <- 1e5
    level
  })
X1 <- get_X1(X1_levels_temp)
X2 <- get_X2(X1_levels_temp)
formula <- model_specs$formula
mm_formula <- substring(formula, 2)
X_design <- get_X_design(mm_formula, X1, X2)
Beta_0 <- readRDS(here(true_params_dir, "Beta_0.rds"))
pY_0 <- get_Y_probs(X_design, Beta_0)
theoretical_entropy_plot <- get_theoretical_entropy_plot(X1_levels_temp, pY_0)
```

```{r include=FALSE}
integrated_LL <- readRDS(here(results_dir, "integrated_LL.rds"))
profile_LL <- readRDS(here(results_dir, "profile_LL.rds"))
IL_plot <- get_LL_plot(integrated_LL$log_L_bar_df)
IL_branches_plot <- get_branches_plot(integrated_LL$branches_matrix)
PL_plot <- get_LL_plot(profile_LL)
```

```{r include=FALSE}
H_0 <- readRDS(here(true_params_dir, "H_0.rds"))
h <- get_X1_level_of_interest(X1_levels)
psi_0 <- H_0 |>
  filter(X1 == h) |>
  pull(entropy)

LL_df <- integrated_LL$log_L_bar_df |>
  merge(profile_LL, all = TRUE)

LL_df_long <- get_LL_df_long(LL_df)

alpha_levels <- optimization_specs$PL$alpha_levels

MLE_data <- readRDS(here(results_dir, "MLE_data.rds"))
conf_ints <- readRDS(here(results_dir, "conf_ints.rds"))

caption <- make_kable_caption(iter_dir)

LL_comparison_tables <- render_LL_comparison_tables(
  MLE_data = MLE_data,
  conf_ints = conf_ints,
  psi_0 = psi_0
  )

spline_models <- get_spline_models(LL_df_long)

pseudolikelihoods <- get_pseudolikelihoods(spline_models, MLE_data)

stat_fns <- get_stat_fns(pseudolikelihoods, LL_df)

LL_comparison_plot <- get_LL_comparison_plot(
  stat_fns = stat_fns,
  LL_df_long = LL_df_long,
  MLE_data = MLE_data,
  alpha_levels = alpha_levels,
  psi_0 = psi_0
  )
```

```{r echo=FALSE, message=FALSE, warning=FALSE, dpi=300}
LL_comparison_plot
IL_plot
PL_plot
IL_branches_plot
LL_comparison_tables$MLEs
LL_comparison_tables$CIs
observed_plots$data_plot
observed_plots$Y_probs_plot
observed_plots$observed_entropy_plot
theoretical_entropy_plot
```
