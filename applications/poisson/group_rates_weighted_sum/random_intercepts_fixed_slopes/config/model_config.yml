experiment:
  app: poisson
  estimand: group_rates_weighted_sum
  model: random_intercepts_fixed_slopes  
  id: ~
  sim_id: ~
  iter_id: ~
  description: >
    Random intercepts Poisson regression with fixed slopes. 
    Each group has its own random intercept (alpha_g), while slopes
    may be homogeneous (shared across groups) or heterogeneous (group-specific),
    but are treated as fixed effects. Marginal group rates are computed by
    integrating over the random intercept and the covariate distribution.

model:

  seed: 5093

  # -------------------------------
  # Groups
  # -------------------------------
  groups:
    num_groups: 20
    n_per_group:
      gen_type: fixed
      fixed:
        values: 20
      random:
        distribution:
          name: rpois
          args: [1, 10]


  # -------------------------------
  # Intercepts (random)
  # -------------------------------
  intercepts:
    effect: random
    symbol: α
    baseline: 1.5
    distribution: 
      name: rnorm
      args: [0.0, 1.0]

  # -------------------------------
  # Covariates (fixed slopes)
  # -------------------------------
  covariates:
    - effect: fixed
      type: homogeneous  # shared across groups
      variable:
        symbol: X1
        distribution:
          name: rexp
          args: [1.0]
      coefficient:
        symbol: γ1
        distribution:
          name: rnorm
          args: [0.2, 0.05]

    - effect: fixed
      type: heterogeneous  # group-specific
      variable:
        symbol: X2
        distribution:
          name: rnorm
          args: [0.0, 1.0]
      coefficient:
        symbol: ζ2
        distribution:
          name: rnorm
          args: [1, 0.5]

  # -------------------------------
  # Exposure / offset
  # -------------------------------
  exposure:
    symbol: t
    distribution:
      name: runif
      args: [2, 4]

  # -------------------------------
  # Weights for group-level summaries
  # -------------------------------
  weights:
    symbol: w
    distribution:
      name: runif
      args: [1, 10]
    normalize_mean_to: 1.0

  # -------------------------------
  # Evaluation / Marginalization
  # -------------------------------
  evaluation:
    mode: marginal                  # marginal vs reference
    reference:
      xstar:
        X1: 0.0
        X2: 0.0
    marginal:
      over: sample                   # sample from X
      summary: mean
      n_mc: 1e6
