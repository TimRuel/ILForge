experiment:
  app: poisson
  estimand: group_rates_weighted_sum
  model: random_intercept_mixed_slopes 
  id: ~
  sim_id: ~
  iter_id: ~
  description: >
    Random effect intercepts with mixed effect slopes Poisson regression.
    Each group has its own random intercept (α_g) and may have
    some or all slopes as random effects (ζ_gk), while other slopes
    remain fixed (γ_gk). Marginal group rates are computed by integrating
    over all random effects and the covariate distribution.

model:

  seed: 3481

  # -------------------------------
  # Groups
  # -------------------------------
  groups:
    A: 3
    B: 3
    C: 3
    D: 3
    E: 3

  # -------------------------------
  # Intercepts (random)
  # -------------------------------
  intercepts:
    effect: random
    symbol: α
    distribution: 
      name: rnorm
      args: [1.5, 0.5]

  # -------------------------------
  # Covariates (slopes can be fixed or random)
  # -------------------------------
  covariates:
    - effect: fixed
      type: homogeneous
      variable:
        symbol: X1
        distribution:
          name: rexp
          args: [1.0]
      coefficient:
        symbol: γ1
        distribution:
          name: rnorm
          args: [0.2, 0.05]

    - effect: fixed
      type: heterogeneous
      variable:
        symbol: X2
        distribution:
          name: rnorm
          args: [0.0, 1.0]
      coefficient:
        symbol: γ2
        distribution:
          name: rnorm
          args: [0.5, 0.1]

    - effect: random
      type: heterogeneous
      variable:
        symbol: X3
        distribution:
          name: rnorm
          args: [0.0, 1.0]
      coefficient:
        symbol: ζ3
        distribution:
          name: rnorm
          args: [0.3, 0.05]

  # -------------------------------
  # Exposure / offset
  # -------------------------------
  exposure:
    symbol: t
    distribution:
      name: runif
      args: [2, 4]

  # -------------------------------
  # Weights for group-level summaries
  # -------------------------------
  weights:
    symbol: w
    distribution:
      name: runif
      args: [1, 10]
    normalize_mean_to: 1.0

  # -------------------------------
  # Evaluation / Marginalization
  # -------------------------------
  evaluation:
    mode: marginal
    reference:
      xstar:
        X1: 0.0
        X2: 0.0
        X3: 0.0
    marginal:
      over: sample
      summary: mean
      n_mc: 1e6
